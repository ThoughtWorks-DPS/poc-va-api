version: 2.1
orbs:
  secrethub: secrethub/cli@1.0.0
executors:
  base-agent:
    docker:
      - image: twdps/di-circleci-infra-image:stable
jobs:
  check-for-secrets:
    executor: base-agent
    steps:
      - checkout
      - run: |
          curl -sL https://raw.githubusercontent.com/awslabs/git-secrets/master/git-secrets >> git-secrets
          chmod +x git-secrets
          ./git-secrets --add-provider -- curl https://raw.githubusercontent.com/ThoughtWorks-DPS/poc-resources/master/git-secrets-pattern.txt
          ./git-secrets --scan
  unit-test:
    executor: base-agent
    steps:
      - checkout
      - run: pip install -r requirements.txt
      - run: pytest test/unit

  integration-test:
    executor: base-agent
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          command: sudo apk add --no-cache make==4.3-r0
      - run:
          name: Build and run image
          command: make GIT_HASH=${CIRCLE_SHA1:0:7} app
      - run:
          name: Run swagger test
          background: true
          command: make swagger-test
      - run:
          name: Run integration test
          command: make integration-test
      - run:
          step-name: Save Image
          command: |
            mkdir /tmp/images
            docker save -o /tmp/images/project_api_latest.tar project_api:latest
      - persist_to_workspace:
          root: /tmp
          paths: images/project_api_latest.tar

  push-git-hash:
    executor: base-agent
    environment:
      GITHUB_TOKEN: secrethub://vapoc/platform/svc/github/access-token
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - attach_workspace:
          at: /tmp
      - add_ssh_keys:
          fingerprints:
            - "c9:bc:64:42:70:68:38:b0:04:75:d1:15:b2:01:be:2f"
      - secrethub/exec:
          step-name: publish
          command: |
            echo $GITHUB_TOKEN | docker login https://docker.pkg.github.com -u $GITHUB_USERNAME --password-stdin
            docker load -i /tmp/images/project_api_latest.tar
            docker tag project_api:latest docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:${CIRCLE_SHA1:0:7}
            docker push docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:${CIRCLE_SHA1:0:7}

  dev-deploy:
    executor: base-agent
    steps:
      - checkout
      - run:
          name: pull kubeconfig
          shell: secrethub run -- /bin/sh -eo pipefail
          command: |
            mkdir ~/.kube
            SECRETHUB_VAR_ENV=preview secrethub inject -i tpl/kubeconfig.tpl -o ~/.kube/config
      - run:
          name: assume-role
          command: |
            export AWS_ACCOUNT_ID=$(secrethub read vapoc/platform/svc/aws/aws-account-id)
            aws sts assume-role --output json --role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/DPSTerraformRole --role-session-name dev-deployment > credentials
            export AWS_ACCESS_KEY_ID=$(cat credentials | jq -r ".Credentials.AccessKeyId")
            export AWS_SECRET_ACCESS_KEY=$(cat credentials | jq -r ".Credentials.SecretAccessKey")
            export AWS_SESSION_TOKEN=$(cat credentials | jq -r ".Credentials.SessionToken")
            export AWS_DEFAULT_REGION=us-west-2
      - run:
          name: deploy to eks
          command: helm install poc-va-api helm --set tag=0.0.67 -n di-dev

  patch-tag-push:
    executor: base-agent
    environment:
      GITHUB_TOKEN: secrethub://vapoc/platform/svc/github/access-token
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - attach_workspace:
          at: /tmp
      - add_ssh_keys:
          fingerprints:
            - "c9:bc:64:42:70:68:38:b0:04:75:d1:15:b2:01:be:2f"
      - run:
          name: tag-patch
          command: |
            current_version=$(git describe --abbrev=0 | tr -d 'v')
            new_version=$(docker run --rm alpine/semver semver -c -i patch $current_version)
            git config --global user.email "twdsp.io@thoughtworks.com"
            git config --global user.name "twdps.io"
            git tag -a "v${new_version}" -m "v${new_version}"
            git push origin master "v${new_version}"
      - secrethub/exec:
          step-name: publish
          command: |
            current_version=$(git describe --abbrev=0 | tr -d 'v')
            echo $GITHUB_TOKEN | docker login https://docker.pkg.github.com -u $GITHUB_USERNAME --password-stdin
            docker load -i /tmp/images/project_api_latest.tar
            docker tag project_api:latest docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:$current_version
            docker push docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:$current_version

  minor-tag-push:
    executor: base-agent
    environment:
      GITHUB_TOKEN: secrethub://vapoc/platform/svc/github/access-token
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - attach_workspace:
          at: /tmp
      - add_ssh_keys:
          fingerprints:
            - "c9:bc:64:42:70:68:38:b0:04:75:d1:15:b2:01:be:2f"
      - run:
          name: tag-minor
          command: |
            current_version=$(git describe --abbrev=0 | tr -d 'v')
            new_version=$(docker run --rm alpine/semver semver -c -i minor $current_version)
            git config --global user.email "twdsp.io@thoughtworks.com"
            git config --global user.name "twdps.io"
            git tag -a "v${new_version}" -m "v${new_version}"
            git push origin master "v${new_version}"
      - secrethub/exec:
          step-name: publish
          command: |
            current_version=$(git describe --abbrev=0 | tr -d 'v')
            echo $GITHUB_TOKEN | docker login https://docker.pkg.github.com -u $GITHUB_USERNAME --password-stdin
            docker load -i /tmp/images/project_api_latest.tar
            docker tag project_api:latest docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:$current_version
            docker push docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:$current_version

  major-tag-push:
    executor: base-agent
    environment:
      GITHUB_TOKEN: secrethub://vapoc/platform/svc/github/access-token
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - attach_workspace:
          at: /tmp
      - add_ssh_keys:
          fingerprints:
            - "c9:bc:64:42:70:68:38:b0:04:75:d1:15:b2:01:be:2f"
      - run:
          name: tag-major
          command: |
            current_version=$(git describe --abbrev=0 | tr -d 'v')
            new_version=$(docker run --rm alpine/semver semver -c -i major $current_version)
            git config --global user.email "twdsp.io@thoughtworks.com"
            git config --global user.name "twdps.io"
            git tag -a "v${new_version}" -m "v${new_version}"
            git push origin master "v${new_version}"
      - secrethub/exec:
          step-name: publish
          command: |
            current_version=$(git describe --abbrev=0 | tr -d 'v')
            echo $GITHUB_TOKEN | docker login https://docker.pkg.github.com -u $GITHUB_USERNAME --password-stdin
            docker load -i /tmp/images/project_api_latest.tar
            docker tag project_api:latest docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:$current_version
            docker push docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:$current_version

workflows:
  version: 2
  main:
    jobs:
      - check-for-secrets:
          context: dps-va-di
      - unit-test
      - integration-test
      - push-git-hash:
          context: dps-va-di
          requires:
            - check-for-secrets
            - unit-test
            - integration-test
      - dev-deploy:
          context: dps-va-di
      - tag-patch-option:
          type: approval
          requires:
            - check-for-secrets
            - unit-test
            - integration-test
      - tag-minor-option:
          type: approval
          requires:
            - check-for-secrets
            - unit-test
            - integration-test
      - tag-major-option:
          type: approval
          requires:
            - check-for-secrets
            - unit-test
            - integration-test
      - patch-tag-push:
          requires:
            - tag-patch-option
          context: dps-va-di
      - minor-tag-push:
          requires:
            - tag-minor-option
          context: dps-va-di
      - major-tag-push:
          requires:
            - tag-major-option
          context: dps-va-di
