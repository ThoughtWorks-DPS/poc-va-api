version: 2.1

orbs:
  secrethub: secrethub/cli@1.0.0
  git-tag: twdps/git-tag-orb@0.1.0

executors:
  base-agent:
    docker:
      - image: twdps/di-circleci-infra-image:stable

on-push-master: &on-push-master
  branches:
    only: /master/
  tags:
    ignore: /.*/

on-tag-master: &on-tag-master
  branches:
    ignore: /.*/
  tags:
    only: /.*/

jobs:
  check-for-secrets:
    executor: base-agent
    steps:
      - checkout
      - run: |
          curl -sL https://raw.githubusercontent.com/awslabs/git-secrets/master/git-secrets >> git-secrets
          chmod +x git-secrets
          ./git-secrets --add-provider -- curl https://raw.githubusercontent.com/ThoughtWorks-DPS/poc-resources/master/git-secrets-pattern.txt
          ./git-secrets --scan

  unit-test:
    executor: base-agent
    environment:
      CC_TEST_REPORTER_ID: secrethub://vapoc/platform/svc/code-climate/poc-va-api-reporter-id
    steps:
      - checkout
      - run: pip install -r requirements.txt
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - secrethub/exec:
          command: |
            ./cc-test-reporter before-build
            pytest --cov-fail-under=80 --cov=src --cov-report xml test/unit
      - secrethub/exec:
          command: |
            ./cc-test-reporter format-coverage -t coverage.py
            ./cc-test-reporter after-build upload-coverage --exit-code $?


  integration-test:
    executor: base-agent
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          command: sudo apk add --no-cache make==4.3-r0
      - run:
          name: Build and run image
          command: make GIT_HASH=${CIRCLE_SHA1:0:7} app
      - run:
          name: Run swagger test
          background: true
          command: make swagger-test
      - run:
          name: Run integration test
          command: make integration-test
      - run:
          step-name: Save Image
          command: |
            mkdir /tmp/images
            docker save -o /tmp/images/project_api_latest.tar docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:${CIRCLE_SHA1:0:7}
      - persist_to_workspace:
          root: /tmp
          paths: images/project_api_latest.tar

  push-git-hash:
    executor: base-agent
    environment:
      GITHUB_TOKEN: secrethub://vapoc/platform/svc/github/access-token
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - attach_workspace:
          at: /tmp
      - add_ssh_keys:
          fingerprints:
            - $SVC_FINGERPRINT
      - secrethub/exec:
          step-name: publish
          command: |
            echo $GITHUB_TOKEN | docker login https://docker.pkg.github.com -u $GITHUB_USERNAME --password-stdin
            docker load -i /tmp/images/project_api_latest.tar
            docker push docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:${CIRCLE_SHA1:0:7}

  deploy:
    parameters:
      environment:
        description: target environment
        type: string
        default: ""
      version:
        description: set api version to use
        type: string
        default: ""
    executor: base-agent
    environment:
      GITHUB_TOKEN: secrethub://vapoc/platform/svc/github/access-token
    steps:
      - checkout
      - run:
          name: pull kubeconfig
          shell: secrethub run -- /bin/sh -eo pipefail
          command: |
            mkdir ~/.kube
            SECRETHUB_VAR_ENV=preview secrethub inject -i tpl/kubeconfig.tpl -o ~/.kube/config
      - secrethub/exec:
          step-name: run helm chart
          command: |
            export AWS_ACCOUNT_ID=$(secrethub read vapoc/platform/svc/aws/aws-account-id)
            export AWS_ACCESS_KEY_ID=$(secrethub read vapoc/platform/svc/aws/DPSSimpleServiceAccount/aws-access-key-id)
            export AWS_SECRET_ACCESS_KEY=$(secrethub read vapoc/platform/svc/aws/DPSSimpleServiceAccount/aws-secret-access-key)
            export AWS_DEFAULT_REGION=us-west-2
            helm upgrade --install poc-va-api helm --set-string image.tag=<< parameters.version >> \
            --set-string info.version=<< parameters.version >> --set-string info.git_hash=${CIRCLE_SHA1:0:7} \
            -f helm/<< parameters.environment >>.yaml -n << parameters.environment >>

  smoke-test:
    executor: base-agent
    parameters:
      host:
        description: target endpoint to run smoke test
        type: string
        default: ""
    steps:
      - checkout
      - run:
          name: run smoke test
          command: ./smoke-test.sh << parameters.host >>

  publish:
    executor: base-agent
    environment:
      GITHUB_TOKEN: secrethub://vapoc/platform/svc/github/access-token
      GITHUB_USERNAME: secrethub://vapoc/platform/svc/github/username
    steps:
    - checkout
    - setup_remote_docker:
        version: 19.03.13
    - add_ssh_keys:
        fingerprints:
          - $SVC_FINGERPRINT
    - secrethub/exec:
        step-name: publish
        command: |
          echo $GITHUB_TOKEN | docker login https://docker.pkg.github.com -u $GITHUB_USERNAME --password-stdin
          docker pull docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:${CIRCLE_SHA1:0:7}
          docker tag docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:${CIRCLE_SHA1:0:7} docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:$CIRCLE_TAG
          docker push docker.pkg.github.com/thoughtworks-dps/poc-va-api/poc-va-api:$CIRCLE_TAG

workflows:
  version: 2
  main:
    jobs:
      - check-for-secrets:
          context: dps-va-di
      - unit-test:
          context: dps-va-di
      - integration-test
      - push-git-hash:
          context: dps-va-di
          requires:
            - check-for-secrets
            - unit-test
            - integration-test
      - deploy:
          name: dev-deploy
          environment: di-dev
          version: ${CIRCLE_SHA1:0:7}
          context: dps-va-di
          requires:
            - push-git-hash
      - smoke-test:
          name: dev-smoke-test
          host: dev.devportal.name
          requires:
            - dev-deploy
      - deploy:
          name: staging-deploy
          environment: di-staging
          version: ${CIRCLE_TAG}
          context: dps-va-di
          requires:
            - publish
          filters: *on-tag-master
      - smoke-test:
          name: staging-smoke-test
          host: api.devportal.name
          requires:
            - staging-deploy
          filters: *on-tag-master
      - release:
          type: approval
          requires:
            - dev-smoke-test
      - tag-patch-option:
          type: approval
          requires:
            - release
      - tag-minor-option:
          type: approval
          requires:
            - release
      - tag-major-option:
          type: approval
          requires:
            - release
      - git-tag/apply:
          name: apply git patch
          semantic-version: patch
          fingerprint: $SVC_FINGERPRINT
          context: dps-va-di
          requires:
            - tag-patch-option
      - git-tag/apply:
          name: apply git minor
          semantic-version: minor
          fingerprint: $SVC_FINGERPRINT
          context: dps-va-di
          requires:
            - tag-minor-option
      - git-tag/apply:
          name: apply git major
          semantic-version: major
          fingerprint: $SVC_FINGERPRINT
          context: dps-va-di
          requires:
            - tag-major-option
      - publish:
          context: dps-va-di
          filters: *on-tag-master
